{"openapi":"3.0.0","info":{"title":"Hawksight API","version":"0.0.1","description":""},"basePath":"/","paths":{"/health":{"get":{"description":"Health check endpoint","tags":["Health Check"],"responses":{"200":{"description":"Health check response","content":{"application/json":{"schema":{"type":"object","properties":{"services":{"type":"object","description":"Status of different services","additionalProperties":{"type":"string","enum":["OK","Not OK"]}}}}}}}}}},"/portfolio":{"get":{"description":"Retrieves the user's portfolio based on the provided wallet and optional pool address.","tags":["General Endpoints"],"parameters":[{"in":"query","name":"wallet","description":"The unique identifier for the user's wallet.","required":true,"schema":{"type":"string"}},{"in":"query","name":"pool","description":"The pool address. If not specified, uses default. See /pools endpoint for available pools.","required":false,"default":"ARwi1S4DaiTG5DX7S4M4ZsrXqpMD1MrTmbu9ue2tpmEq","schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully retrieves the user's portfolio data.","content":{"application/json":{"schema":{"type":"object","properties":{"wallet":{"type":"string","description":"The wallet address of the user."},"userPda":{"type":"string","description":"The associated Program Derived Address (PDA) of the user."},"pools":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"positionAddress":{"type":"string","description":"The address of the position within the pool."},"balances":{"type":"array","items":{"type":"object","properties":{"amount":{"type":"string","description":"Deposit balance."},"mint":{"type":"string","description":"The mint address of the asset."}}}},"fees":{"type":"array","items":{"type":"object","properties":{"amount":{"type":"string","description":"Total amount of fees withdrawable."},"mint":{"type":"string","description":"The mint address of the asset from which fees are taken."}}}},"rewards":{"type":"array","items":{"properties":{"amount":{"type":"string","description":"Total amount of rewards withdrawable."},"mint":{"type":"string","description":"The mint address of the asset from which fees are taken."}}}}}}}}}}}}},"400":{"description":"Bad request, typically due to an invalid wallet address. (General error format)","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The path in the request body that led to the error."}}}}}}}}}},"/pools":{"get":{"description":"Returns all pools integrated by Hawksight.","tags":["General Endpoints"],"responses":{"200":{"description":"Successful creation of wrapped serialized transactions.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier of the pool.","example":"ARwi1S4DaiTG5DX7S4M4ZsrXqpMD1MrTmbu9ue2tpmEq"},"name":{"type":"string","description":"The name of the pool.","example":"USDC-USDT"},"url":{"type":"string","description":"The URL of the pool.","example":"https://app.meteora.ag/dlmm/ARwi1S4DaiTG5DX7S4M4ZsrXqpMD1MrTmbu9ue2tpmEq"},"tags":{"type":"array","items":{"type":"string"},"description":"Tags associated with the pool.","example":["stable","stablecoins"]},"protocol":{"type":"string","description":"The protocol of the pool.","example":"meteora"},"hidden":{"type":"boolean","description":"Whether pool is hidden or not.","example":"false"},"config":{"type":"object","properties":{"address":{"type":"string","description":"The address of the pool.","example":"ARwi1S4DaiTG5DX7S4M4ZsrXqpMD1MrTmbu9ue2tpmEq"},"name":{"type":"string","description":"The name of the pool.","example":"USDC-USDT"},"mint_x":{"type":"string","description":"The mint_x value of the pool.","example":"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"},"mint_y":{"type":"string","description":"The mint_y value of the pool.","example":"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB"},"reserve_x":{"type":"string","description":"The reserve_x value of the pool.","example":"4STreSrMtf8umxyei9DaZG4bX3HT9hE3TGw3Xz41XNHd"},"reserve_y":{"type":"string","description":"The reserve_y value of the pool.","example":"GkTrsQsu8WvrbairmN12aUKk74qHivRNFxaT5YxCECKQ"},"reward_mint_x":{"type":"string","description":"The reward_mint_x value of the pool.","example":"11111111111111111111111111111111"},"reward_mint_y":{"type":"string","description":"The reward_mint_y value of the pool.","example":"11111111111111111111111111111111"},"bin_step":{"type":"integer","description":"The bin_step value of the pool.","example":1}}}}}}}}}}}},"/tokens":{"get":{"description":"Returns all tokens supported by Hawksight.","tags":["General Endpoints"],"responses":{"200":{"description":"Successful creation of wrapped serialized transactions.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","description":"The address of the token.","example":"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"},"name":{"type":"string","description":"The name of the token.","example":"USD Coin"},"symbol":{"type":"string","description":"The symbol of the token.","example":"USDC"},"decimals":{"type":"integer","description":"The number of decimal places for the token.","example":6},"logo":{"type":"string","description":"The URL of the token's logo.","example":"https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v/logo.png"}}}}}}}}}},"/register":{"post":{"description":"Generates a transaction to create a user's program derived address (PDA).","tags":["General Endpoints"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority level, affects the processing speed and fee.","enum":["Default","Low","Medium","High","VeryHigh","UnsafeMax","None"],"default":"Default"},"maxPriorityFee":{"type":"number","description":"Maximum amount of lamports that can be used as a priority fee.","format":"float"},"userWallet":{"type":"string","description":"The wallet address of the user to be registered.","default":"Enter user wallet here"}}}}}},"responses":{"200":{"description":"Returns Transaction Meta: Registering user's PDA to blockchain.","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"Bad request, typically due to an invalid wallet address.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/util/pools":{"get":{"description":"Returns a list of active Meteora DLMM pools with detailed information about each pool.","tags":["Meteora DLMM Utility Functions"],"responses":{"200":{"description":"Retrieves active DLMM pools along with their associated data.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","description":"The unique address identifier for the pool."},"name":{"type":"string","description":"Name of the pool, typically indicating the token pair."},"mint_x":{"type":"string","description":"Token mint address for the X asset in the pool."},"mint_y":{"type":"string","description":"Token mint address for the Y asset in the pool."},"reserve_x":{"type":"string","description":"Reserve account address for the X asset."},"reserve_y":{"type":"string","description":"Reserve account address for the Y asset."},"reserve_x_amount":{"type":"integer","format":"int64","description":"Amount of X asset in the reserve."},"reserve_y_amount":{"type":"integer","format":"int64","description":"Amount of Y asset in the reserve."},"bin_step":{"type":"integer","description":"The bin step size used in the pool's operation."},"base_fee_percentage":{"type":"string","description":"Base fee percentage charged for transactions in the pool."},"max_fee_percentage":{"type":"string","description":"Maximum possible fee percentage that can be charged."},"protocol_fee_percentage":{"type":"string","description":"Fee percentage taken by the protocol."},"liquidity":{"type":"string","description":"Current liquidity in the pool."},"reward_mint_x":{"type":"string","description":"Reward mint address for the X asset."},"reward_mint_y":{"type":"string","description":"Reward mint address for the Y asset."},"fees_24h":{"type":"number","format":"float","description":"Fees generated in the pool over the last 24 hours."},"today_fees":{"type":"number","format":"float","description":"Fees generated in the pool today."},"trade_volume_24h":{"type":"number","format":"float","description":"Trade volume in the pool over the last 24 hours."},"cumulative_trade_volume":{"type":"string","description":"Cumulative trade volume in the pool since inception."},"cumulative_fee_volume":{"type":"string","description":"Cumulative fees generated by the pool since inception."},"current_price":{"type":"number","format":"double","description":"Current price of X asset in terms of Y asset."},"apr":{"type":"number","format":"double","description":"Annual Percentage Rate for earnings in the pool."},"apy":{"type":"number","format":"double","description":"Annual Percentage Yield for earnings in the pool."},"farm_apr":{"type":"number","format":"double","description":"APR for farming activities associated with the pool."},"farm_apy":{"type":"number","format":"double","description":"APY for farming activities associated with the pool."},"hide":{"type":"boolean","description":"Indicates whether the pool is hidden from default views."}}}}}}}}}},"/meteora/dlmm/util/positions":{"get":{"description":"Returns Meteora DLMM positions of user","tags":["Meteora DLMM Utility Functions"],"parameters":[{"name":"wallet","in":"query","description":"User's wallet address who owns the position","required":true,"schema":{"type":"string"}},{"name":"pool","in":"query","description":"Meteora pool address","default":"ARwi1S4DaiTG5DX7S4M4ZsrXqpMD1MrTmbu9ue2tpmEq","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully retrieves the user's portfolio data.","content":{"application/json":{"schema":{"type":"object","properties":{"wallet":{"type":"string","description":"The wallet address of the user."},"userPda":{"type":"string","description":"The associated Program Derived Address (PDA) of the user."},"pools":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"positionAddress":{"type":"string","description":"The address of the position within the pool."},"balances":{"type":"array","items":{"type":"object","properties":{"amount":{"type":"string","description":"Deposit balance."},"mint":{"type":"string","description":"The mint address of the asset."}}}},"fees":{"type":"array","items":{"type":"object","properties":{"amount":{"type":"string","description":"Total amount of fees withdrawable."},"mint":{"type":"string","description":"The mint address of the asset from which fees are taken."}}}},"rewards":{"type":"array","items":{"properties":{"amount":{"type":"string","description":"Total amount of rewards withdrawable."},"mint":{"type":"string","description":"The mint address of the asset from which fees are taken."}}}}}}}}}}}}},"400":{"description":"Bad request, typically due to an invalid wallet address. (General error format)","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/util/activeBin":{"post":{"description":"Returns Meteora DLMM pool's active bin","tags":["Meteora DLMM Utility Functions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"pools":{"type":"array","description":"Pools to search","default":["ARwi1S4DaiTG5DX7S4M4ZsrXqpMD1MrTmbu9ue2tpmEq","GhqPR2A8mqhSyYDrJ8V8wsoGGe11qoURFjWWMm6BPfK4","C8Gr6AUuq9hEdSYJzoEpNcdjpojPZwqG5MtQbeouNNwg"]},"commitment":{"type":"string","description":"Commitment level (processed, confirmed, finalized)","default":"confirmed"}}}}}},"responses":{"200":{"description":"Successful creation of wrapped serialized transactions.","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"integer","description":"Active bin for each pool"}}}}},"400":{"description":"Bad request (General error format)","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/tx/createPositionAndDeposit":{"post":{"description":"Return solana instructions that creates position and deposit to meteora via hawksight.","tags":["Meteora DLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"position":{"type":"string","description":"Uninitialized account (generate via web3.Keypair.generate() function) that serves as user position","default":"Write position address here"},"pool":{"type":"string","description":"Meteora pool address","default":"ARwi1S4DaiTG5DX7S4M4ZsrXqpMD1MrTmbu9ue2tpmEq"},"userWallet":{"type":"string","description":"User's wallet address who owns the position","default":"Write user wallet address here"},"totalXAmount":{"type":"number","description":"Amount of X tokens to deposit","default":10000},"totalYAmount":{"type":"number","description":"Amount of Y tokens to deposit","default":10000},"lowerBinRange":{"type":"number","description":"Lower bin range. Must within active range for request to succeed. (see GET /meteora/dlmm/activeBin) to get active range of your selected pool)","default":-20},"upperBinRange":{"type":"number","description":"Upper bin range. Must within active range for request to succeed. ((see GET /meteora/dlmm/activeBin) to get active range of your selected pool)","default":20},"distribution":{"type":"string","description":"X and Y token distribution. At the moment, we support default meteora distribution functions: SPOT, CURVE, BID-ASK","default":"SPOT"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/tx/deposit":{"post":{"description":"Return solana instructions that deposits to target position in meteora via hawksight.","tags":["Meteora DLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"position":{"type":"string","description":"User's position from meteora (See GET /meteora/dlmm/util/positions)","default":"Write position address here"},"userWallet":{"type":"string","description":"User's wallet address who owns the position","default":"Write user wallet address here"},"totalXAmount":{"type":"number","description":"Amount of X tokens to deposit","default":10000},"totalYAmount":{"type":"number","description":"Amount of Y tokens to deposit","default":10000},"distribution":{"type":"string","description":"X and Y token distribution. At the moment, we support default meteora distribution functions: SPOT, CURVE, BID-ASK","default":"SPOT"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/tx/withdraw":{"post":{"description":"Return Solana instructions that create a position and deposit to Meteora via Hawksight.","tags":["Meteora DLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"position":{"type":"string","description":"User's position from Meteora (See GET /meteora/dlmm/util/positions).","default":"Write position address here"},"userWallet":{"type":"string","description":"User's wallet address who owns the position.","default":"Write user wallet address here"},"amountBps":{"type":"number","description":"Amount of X and Y tokens to withdraw (in bps percentage). Example: 50% means 50 * 100 = 5000 amountBps.","default":5000},"shouldClaimAndClose":{"type":"boolean","description":"Whether to generate claim swap, rewards, and close position instruction. Accepts \"true\" or \"false\" only.","default":false}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/tx/claim":{"post":{"description":"Return Solana instructions that create a position and deposit to Meteora via Hawksight.","tags":["Meteora DLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"userWallet":{"type":"string","description":"User's wallet address who owns the position.","default":"Write user wallet address here"},"position":{"type":"string","description":"User's position from Meteora (See GET /meteora/dlmm/util/positions).","default":"Write position address here"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/tx/closePosition":{"post":{"description":"Return Solana instructions that create a position and deposit to Meteora via Hawksight.","tags":["Meteora DLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"userWallet":{"type":"string","description":"User's wallet address who owns the position.","default":"Write user wallet address here"},"position":{"type":"string","description":"User's position from Meteora (See GET /meteora/dlmm/util/positions).","default":"Write position address here"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/automation/claimFeeAndRewardsAutomationIx":{"post":{"description":"Generate claimFee and claimReward instruction, to be signed by Hawksight authority.","tags":["Meteora DLMM Automation Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"userWallet":{"type":"string","description":"User's wallet address who owns the position.","default":"Write user wallet address here"},"position":{"type":"string","description":"User's position from Meteora (See GET /meteora/dlmm/util/positions).","default":"Write position address here"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/automation/createPositionAndDepositAutomationIx":{"post":{"description":"Generate deposit Meteora instruction (with init position), to be signed by Hawksight authority.","tags":["Meteora DLMM Automation Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"pool":{"type":"string","description":"Meteora pool address","default":"ARwi1S4DaiTG5DX7S4M4ZsrXqpMD1MrTmbu9ue2tpmEq"},"position":{"type":"string","description":"User's position from Meteora (See GET /meteora/dlmm/util/positions).","default":"Write position address here"},"userWallet":{"type":"string","description":"User's wallet address who owns the position.","default":"Write user wallet address here"},"lowerBinRange":{"type":"number","description":"Lower bin range. Must within active range for request to succeed. (see GET /meteora/dlmm/activeBin) to get active range of your selected pool)","default":-20},"upperBinRange":{"type":"number","description":"Upper bin range. Must within active range for request to succeed. ((see GET /meteora/dlmm/activeBin) to get active range of your selected pool)","default":20},"distribution":{"type":"string","description":"X and Y token distribution. At the moment, we support default meteora distribution functions: SPOT, CURVE, BID-ASK","default":"SPOT"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/meteora/dlmm/automation/fullWithdrawAndClosePositionAutomationIx":{"post":{"description":"Generate full Meteora withdraw instruction, to be signed by Hawksight authority.","tags":["Meteora DLMM Automation Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"userWallet":{"type":"string","description":"User's wallet address who owns the position.","default":"Write user wallet address here"},"position":{"type":"string","description":"User's position from Meteora (See GET /meteora/dlmm/util/positions).","default":"Write position address here"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/orca/util/pools":{"get":{"description":"Returns a list of active Orca whirlpools on Hawksight with detailed information about each pool.","tags":["Orca Utility Functions"],"responses":{"200":{"description":"Retrieves active whirlpools along with their associated data.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","description":"The unique address identifier for the whirlpool."},"tokenA":{"type":"object","description":"Detailed information about token A in the pool.","properties":{"mint":{"type":"string","description":"Mint address for token A."},"symbol":{"type":"string","description":"Symbol for token A."},"name":{"type":"string","description":"Full name of token A."},"decimals":{"type":"integer","description":"Number of decimals used by token A."},"logoURI":{"type":"string","description":"URI to the token logo."},"coingeckoId":{"type":"string","description":"CoinGecko identifier for the token."},"whitelisted":{"type":"boolean","description":"Indicates if token A is whitelisted."},"poolToken":{"type":"boolean","description":"Indicates if token A is a pool token."}}},"tokenB":{"type":"object","description":"Detailed information about token B in the pool.","properties":{"mint":{"type":"string","description":"Mint address for token B."},"symbol":{"type":"string","description":"Symbol for token B."},"name":{"type":"string","description":"Full name of token B."},"decimals":{"type":"integer","description":"Number of decimals used by token B."},"logoURI":{"type":"string","description":"URI to the token logo."},"coingeckoId":{"type":"string","description":"CoinGecko identifier for the token."},"whitelisted":{"type":"boolean","description":"Indicates if token B is whitelisted."},"poolToken":{"type":"boolean","description":"Indicates if token B is a pool token."}}},"whitelisted":{"type":"boolean","description":"Indicates if the whirlpool is whitelisted."},"tickSpacing":{"type":"integer","description":"Tick spacing used in the pool."},"price":{"type":"number","format":"double","description":"Current price of token A in terms of token B."},"lpFeeRate":{"type":"number","format":"double","description":"Liquidity provider fee rate for the pool."},"protocolFeeRate":{"type":"number","format":"double","description":"Protocol fee rate for the pool."},"whirlpoolsConfig":{"type":"string","description":"Identifier for the whirlpool configuration."},"modifiedTimeMs":{"type":"integer","format":"int64","description":"Last modified time of the pool in milliseconds."},"tvl":{"type":"number","format":"double","description":"Total value locked in the pool."},"volume":{"type":"object","description":"Trading volume statistics for the pool.","properties":{"day":{"type":"number","format":"double","description":"Daily trading volume."},"week":{"type":"number","format":"double","description":"Weekly trading volume."},"month":{"type":"number","format":"double","description":"Monthly trading volume."}}},"volumeDenominatedA":{"type":"object","description":"Trading volume denominated in token A.","properties":{"day":{"type":"number","format":"double","description":"Daily volume in token A."},"week":{"type":"number","format":"double","description":"Weekly volume in token A."},"month":{"type":"number","format":"double","description":"Monthly volume in token A."}}},"volumeDenominatedB":{"type":"object","description":"Trading volume denominated in token B.","properties":{"day":{"type":"number","format":"double","description":"Daily volume in token B."},"week":{"type":"number","format":"double","description":"Weekly volume in token B."},"month":{"type":"number","format":"double","description":"Monthly volume in token B."}}},"priceRange":{"type":"object","description":"Price range statistics for the pool.","properties":{"day":{"type":"object","description":"Daily price range.","properties":{"min":{"type":"number","format":"double","description":"Minimum price of the day."},"max":{"type":"number","format":"double","description":"Maximum price of the day."}}},"week":{"type":"object","description":"Weekly price range.","properties":{"min":{"type":"number","format":"double","description":"Minimum price of the week."},"max":{"type":"number","format":"double","description":"Maximum price of the week."}}},"month":{"type":"object","description":"Monthly price range.","properties":{"min":{"type":"number","format":"double","description":"Minimum price of the month."},"max":{"type":"number","format":"double","description":"Maximum price of the month."}}}}},"feeApr":{"type":"object","description":"Fee APR for different time periods.","properties":{"day":{"type":"number","format":"double","description":"Daily fee APR."},"week":{"type":"number","format":"double","description":"Weekly fee APR."},"month":{"type":"number","format":"double","description":"Monthly fee APR."}}},"reward0Apr":{"type":"object","description":"Reward APR for the first reward token for different time periods.","properties":{"day":{"type":"number","format":"double","description":"Daily reward0 APR."},"week":{"type":"number","format":"double","description":"Weekly reward0 APR."},"month":{"type":"number","format":"double","description":"Monthly reward0 APR."}}},"reward1Apr":{"type":"object","description":"Reward APR for the second reward token for different time periods.","properties":{"day":{"type":"number","format":"double","description":"Daily reward1 APR."},"week":{"type":"number","format":"double","description":"Weekly reward1 APR."},"month":{"type":"number","format":"double","description":"Monthly reward1 APR."}}},"reward2Apr":{"type":"object","description":"Reward APR for the third reward token for different time periods.","properties":{"day":{"type":"number","format":"double","description":"Daily reward2 APR."},"week":{"type":"number","format":"double","description":"Weekly reward2 APR."},"month":{"type":"number","format":"double","description":"Monthly reward2 APR."}}},"totalApr":{"type":"object","description":"Total APR combining fee and reward APRs for different time periods.","properties":{"day":{"type":"number","format":"double","description":"Total daily APR."},"week":{"type":"number","format":"double","description":"Total weekly APR."},"month":{"type":"number","format":"double","description":"Total monthly APR."}}}}}}}}}}}},"/orca/util/positions":{"get":{"description":"Returns Orca positions of user","tags":["Orca Utility Functions"],"parameters":[{"name":"wallet","in":"query","description":"User's wallet address who owns the position","required":true,"schema":{"type":"string"}},{"name":"pool","in":"query","description":"Orca whirlpool address","default":"FPPHjpjBk98pd5Z3xXQuDcrZdUdqfraCRJU8yvdT1ZKR","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully retrieves the user's portfolio data.","content":{"application/json":{"schema":{"type":"object","properties":{"wallet":{"type":"string","description":"The wallet address of the user."},"userPda":{"type":"string","description":"The associated Program Derived Address (PDA) of the user."},"pools":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"positionAddress":{"type":"string","description":"The address of the position within the pool."},"balances":{"type":"array","items":{"type":"object","properties":{"amount":{"type":"string","description":"Deposit balance."},"mint":{"type":"string","description":"The mint address of the asset."}}}},"fees":{"type":"array","items":{"type":"object","properties":{"amount":{"type":"string","description":"Total amount of fees withdrawable."},"mint":{"type":"string","description":"The mint address of the asset from which fees are taken."}}}},"rewards":{"type":"array","items":{"properties":{"amount":{"type":"string","description":"Total amount of rewards withdrawable."},"mint":{"type":"string","description":"The mint address of the asset from which fees are taken."}}}}}}}}}}}}},"400":{"description":"Bad request, typically due to an invalid wallet address. (General error format)","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The path in the request body that led to the error."}}}}}}}}}},"/orca/util/getPositionMint":{"get":{"description":"Returns orca position mint from given position","tags":["Orca Utility Functions"],"parameters":[{"name":"position","in":"query","description":"Orca position address","default":"Enter orca position address here","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successful creation of wrapped serialized transactions.","content":{"application/json":{"schema":{"type":"array"}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/orca/tx/openPosition":{"post":{"description":"Return solana instructions that opens position account for Orca via Hawksight.","tags":["Orca CLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"userWallet":{"type":"string","description":"User's wallet address who owns the position","default":"Write user wallet address here"},"positionMint":{"type":"string","description":"User generated random keypair that serve as orca position NFT mint","default":"Write position address here"},"whirlpool":{"type":"string","description":"Orca whirlpool address","default":"FPPHjpjBk98pd5Z3xXQuDcrZdUdqfraCRJU8yvdT1ZKR"},"tickLowerIndex":{"type":"string","description":"Orca tick lower index","default":0},"tickUpperIndex":{"type":"string","description":"Orca tick upper index","default":0}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/orca/tx/closePosition":{"post":{"description":"Return solana instructions that closes position in Orca via Hawksight.","tags":["Orca CLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"userWallet":{"type":"string","description":"User's wallet address who owns the position","default":"Write user wallet address here"},"positionMint":{"type":"string","description":"User generated random keypair that serve as orca position NFT mint","default":"Write position address here"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/orca/tx/deposit":{"post":{"description":"Return solana instructions that deposits to Orca position via Hawksight.","tags":["Orca CLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"userWallet":{"type":"string","description":"User's wallet address who owns the position","default":"Write user wallet address here"},"positionMint":{"type":"string","description":"User generated random keypair that serve as orca position NFT mint","default":"Write position address here"},"totalXAmount":{"type":"string","description":"User generated random keypair that serve as orca position NFT mint","default":"Write position address here"},"totalYAmount":{"type":"string","description":"User generated random keypair that serve as orca position NFT mint","default":"Write position address here"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/orca/tx/withdraw":{"post":{"description":"Return solana instructions that withdraws to Orca position via Hawksight.","tags":["Orca CLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"userWallet":{"type":"string","description":"User's wallet address who owns the position","default":"Write user wallet address here"},"positionMint":{"type":"string","description":"User generated random keypair that serve as orca position NFT mint","default":"Write position address here"},"liquidityAmount":{"type":"number","description":"Liquidity amount to be withdrawn","default":"1000"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}},"/orca/tx/claimRewards":{"post":{"description":"Return solana instructions that claims reward to Orca position via Hawksight.","tags":["Orca CLMM Instructions"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"priority":{"type":"string","description":"Transaction priority (Default, Low, Medium, High, VeryHigh, UnsafeMax, None)","default":"Default"},"maxPriorityFee":{"type":"number","description":"Max lamports to consume for priority fee"},"userWallet":{"type":"string","description":"User's wallet address who owns the position","default":"Write user wallet address here"},"positionMint":{"type":"string","description":"User generated random keypair that serve as orca position NFT mint","default":"Write position address here"}}}}}},"responses":{"200":{"description":"Transaction Meta","content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"Description of the operation performed."},"estimatedFeeInSOL":{"type":"string","description":"Estimated fee for the transaction in SOL."},"addressLookupTableAddresses":{"type":"array","items":{"type":"string"},"description":"List of address lookup table addresses used in the transaction."},"computeBudgetInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","description":"List of accounts related to the compute budget instructions."},"data":{"type":"string","description":"Encoded data for the compute budget operation."},"programId":{"type":"string","description":"Program identifier for the compute budget."}}}},"mainInstructions":{"type":"array","items":{"type":"object","properties":{"accounts":{"type":"array","items":{"type":"object","properties":{"isSigner":{"type":"boolean","description":"Indicates if the account is a signer."},"isWritable":{"type":"boolean","description":"Indicates if the account is writable."},"pubkey":{"type":"string","description":"Public key of the account."}}}},"data":{"type":"string","description":"Encoded data related to the main transaction instructions."},"programId":{"type":"string","description":"Program identifier for the main transaction."}}}}}}}}},"400":{"description":"General error format","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","description":"Error code identifying the type of error."},"message":{"type":"string","description":"A descriptive message explaining the error."},"path":{"type":"array","items":{"type":"string"},"description":"The JSON path in the request body that led to the error."}}}}}}}}}}},"components":{},"tags":[]}